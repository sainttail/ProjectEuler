//
//  Problem2.m
//  ProjectEulor
//
//  Created by Eakawat Tantamjarik on 12/13/2557 BE.
//  Copyright (c) 2557 Codium. All rights reserved.
//

/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

#import "Problem2.h"

@implementation Problem2

- (id)answer
{
    return @([self sum]);
}

- (int)sum
{
    int i = 1;
    int sum = 0;
    int fibo = 0;
    while (fibo <= 4000000) {
        fibo = [self fibonancy:i];
        if (fibo % 2 == 0) {
            sum += fibo;
        }
        i++;
    }
    return sum;
}

- (int)fibonancy:(int)position
{
    if (position == 1) {
        return 1;
    }
    
    if (position == 2) {
        return 2;
    }
    
    return [self fibonancy:position - 2] + [self fibonancy:position - 1];
}

@end
